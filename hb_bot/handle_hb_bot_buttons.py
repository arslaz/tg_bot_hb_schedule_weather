from aiogram.fsm.context import FSMContext
from datetime import datetime

from get_keybord import *
from stategroup import *
from json_file import *

async def handle_hb_bot_buttons(message: Message, state: FSMContext):
    if message.text == "üéÇ –î–æ–±–∞–≤–∏—Ç—å –î–†":
        await message.answer(
            "‚úÖ –û—Ç–ª–∏—á–Ω–æ! –î–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è üéÇ\n\n"
            "–ö–∞–∫ –∑–æ–≤—É—Ç –∏–º–µ–Ω–∏–Ω–Ω–∏–∫–∞?",
            reply_markup=get_cancel_keyboard()
        )
        await state.set_state(AddBirthday.name)

    elif message.text == "üìã –°–ø–∏—Å–æ–∫ –î–†":
        user_id = str(message.from_user.id)
        birthdays = get_date(user_id)

        if not birthdays:
            await message.answer(
                "–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è.",
                reply_markup=get_hb_bot_keyboard()
            )
            return

        message_text = "üìÖ –¢–≤–æ–∏ –¥–Ω–∏ —Ä–æ–∂–¥–µ–Ω–∏—è:\n\n"
        for i, bday in enumerate(birthdays, 1):
            try:
                date_obj = datetime.strptime(bday['date'], '%Y-%m-%d')
                pretty_date = date_obj.strftime('%d.%m.%Y')
            except:
                pretty_date = bday['date']

            message_text += f"{i}. {bday['name']} - {pretty_date}\n"
            if user_id in bot_config['admin'] and bday['user']:
                message_text += f"   üë§ –£–≤–µ–¥–æ–º–ª—è—Ç—å: {bday['user']}\n"
            message_text += "\n"

        await message.answer(
            message_text,
            reply_markup=get_hb_bot_keyboard()
        )

    elif message.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –±–æ—Ç–∞":
        await state.set_state(MainMenuState.choosing_bot)
        await message.answer(
            "–í—ã–±–µ—Ä–∏ –±–æ—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:",
            reply_markup=get_start_keyboard()
        )

    elif message.text == "‚ùå –û—Ç–º–µ–Ω–∞":
        current_state = await state.get_state()
        if current_state and "AddBirthday" in str(current_state):
            await state.set_state(HBBotState.main_menu)
            await message.answer(
                "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
                reply_markup=get_hb_bot_keyboard()
            )
        else:
            await message.answer(
                "–ù–µ—á–µ–≥–æ –æ—Ç–º–µ–Ω—è—Ç—å.",
                reply_markup=get_hb_bot_keyboard()
            )